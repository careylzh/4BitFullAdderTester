/*
   This file was generated automatically by Alchitry Labs version 1.2.1.
   Do not edit this file directly. Instead edit the original Lucid source.
   This is a temporary file and any changes made to it will be destroyed.
*/

module au_top_0 (
    input clk,
    input rst_n,
    output reg [7:0] led,
    output reg [23:0] io_led,
    output reg [7:0] io_seg,
    output reg [3:0] io_sel,
    input [4:0] io_button,
    output reg a,
    output reg b,
    output reg cin,
    input sum,
    input carry,
    input [23:0] io_dip,
    input usb_rx,
    output reg usb_tx
  );
  
  
  
  reg rst;
  
  wire [1-1:0] M_slowclock_value;
  counter_1 slowclock (
    .clk(clk),
    .rst(rst),
    .value(M_slowclock_value)
  );
  
  wire [1-1:0] M_fsmInstance_a;
  wire [1-1:0] M_fsmInstance_b;
  wire [1-1:0] M_fsmInstance_cin;
  wire [24-1:0] M_fsmInstance_io_led;
  reg [5-1:0] M_fsmInstance_io_button;
  reg [1-1:0] M_fsmInstance_rst_n;
  reg [1-1:0] M_fsmInstance_sum;
  reg [1-1:0] M_fsmInstance_carry;
  fsmLogic_2 fsmInstance (
    .clk(M_slowclock_value),
    .rst(rst),
    .io_button(M_fsmInstance_io_button),
    .rst_n(M_fsmInstance_rst_n),
    .sum(M_fsmInstance_sum),
    .carry(M_fsmInstance_carry),
    .a(M_fsmInstance_a),
    .b(M_fsmInstance_b),
    .cin(M_fsmInstance_cin),
    .io_led(M_fsmInstance_io_led)
  );
  
  wire [1-1:0] M_reset_cond_out;
  reg [1-1:0] M_reset_cond_in;
  reset_conditioner_3 reset_cond (
    .clk(M_slowclock_value),
    .in(M_reset_cond_in),
    .out(M_reset_cond_out)
  );
  
  always @* begin
    M_reset_cond_in = ~rst_n;
    rst = M_reset_cond_out;
    led = 8'h00;
    M_fsmInstance_carry = carry;
    M_fsmInstance_sum = sum;
    M_fsmInstance_io_button = io_button[1+0-:1];
    a = M_fsmInstance_a;
    b = M_fsmInstance_b;
    cin = M_fsmInstance_cin;
    M_fsmInstance_rst_n = rst_n;
    usb_tx = usb_rx;
    io_led = M_fsmInstance_io_led;
    io_seg = 8'hff;
    io_sel = 4'hf;
  end
endmodule
